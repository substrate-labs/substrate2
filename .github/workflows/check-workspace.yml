name: check-workspace

on:
  workflow_call:

env:
    CARGO_TERM_COLOR: always

jobs:
  lint:
    name: lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.70.0
        id: toolchain
        with:
          toolchain: stable
          components: clippy
      - name: Cache workspace
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.toolchain.outputs.cachekey }}
          workspaces: ". -> target"
      - name: Install `cargo-hack`
        uses: taiki-e/install-action@cargo-hack
      - name: Check formatting
        run: |
          cargo fmt --check
      - name: Lint
        run: |
          cargo hack --feature-powerset clippy --locked -- -D warnings
  check-docs:
    name: check-docs
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.70.0
        id: toolchain
        with:
          toolchain: stable
          components: clippy
      - name: Cache workspace
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ steps.toolchain.outputs.cachekey }}
          workspaces: ". -> target"
      - name: Install `cargo-hack`
        uses: taiki-e/install-action@cargo-hack
      - uses: extractions/setup-just@v1
      - name: Check that hidden doc files are up-to-date
        run: |
          just gen-hidden-code
          git diff --exit-code
          test -z "$(git ls-files --exclude-standard --others)"
        working-directory: docs/api
      - name: Check docs
        run: |
          cargo hack --all rustdoc --all-features -- -D warnings
  test:
    name: test
    runs-on: bwrc
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.70.0
        id: toolchain
        with:
          toolchain: stable
          components: clippy
      - name: Test
        run: cargo test --locked --all-features
  check-docs-site:
    name: check-docs-site
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: docs/substrate/yarn.lock
      - run: yarn install
        working-directory: docs/substrate
      - run: yarn build
        working-directory: docs/substrate

